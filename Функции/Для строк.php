<?php

//  СОДЕРЖАНИЕ  ///////////////////////////////////////////////////////////////////
# strlen - возвращает длину строки в байтах
# strrev - переворачивает строку наоборот
# str_replace - заменяет слово в строке на заданное нами
str_replace('go', 'mo', 'google'); // 'moogle'
# implode - соединяет элементы массива в строку ("разделитель", $array)
# explode - разделяет строку на эллементы массива  ("разделитель", $string)
# trim - удаляет пробелы (или другие символы) из начала и конца строки
# ltrim - удаляет пробелы (или другие символы) из начала строки
# rtrim - удаляет пробелы (или другие символы) из конца строки
# str_split - разделяет строку на массив символов
# strpos - ищет слово в строке и возвращает его позицию или false
# stripos - аналогичная функция, но ей не важен регистр букв a-A b-B c-C
# strtolower - преобразует строку в нижний регист  a-b-c
# strtoupper - преобразует строку в верхний регист  A-B-C
# substr - извлекает слово заданной длинны в символах из строки
# substr_count - считает количество заданого слова в строке
# nl2br - заменяет символы переноса строки \n на HTML-тег <br>
# htmlentities - преобразует все возмоные символы в HTML-сущности
# htmlspecialchars - преобразует специальные символы в HTML-сущности


//  IMPLODE  ///////////////////////////////////////////////////////////////////////

$array = ["red", "green", "blue"];
$string = implode(", ", $array);
echo $string;
# выведет строку "red, green, blue"


//  EXPLODE  ///////////////////////////////////////////////////////////////////////

$string = "red, green, blue";
$array = explode(", ",$string);
print_r ($array);
# выведет массив ["red", "green", "blue"]


//  R L TRIM  //////////////////////////////////////////////////////////////////////

$greet = "  zzzHELLOxxx  ";

echo trim($greet, " zx");     #    "HELLO"
echo ltrim($greet, " z");   #    "HELLOxxx  "
echo rtrim($greet, " x");   #    "  zzzHELLO" 


//  NL2BR  /////////////////////////////////////////////////////////////////////////

// Определение строки с текстом, содержащим символы новой строки
$text = "Пример текста\nсо символами\nновой строки";

// Использование функции nl2br для замены символов новой строки на HTML-теги <br />
$br_text = nl2br($text);

// Вывод исходной строки и строки с замененными символами новой строки
echo $br_text;

# Пример текста<br />
# со символами<br />
# новой строки


//  STR_SPLIT  /////////////////////////////////////////////////////////////////////

// Использование функции str_split для разделения строки на массив символов
$chars = str_split("Hello");

// Вывод массива символов
print_r($chars);

[
  '0' => 'H',
  '1' => 'e',
  '2' => 'l',
  '3' => 'l',
  '4' => 'o'
];


//  STRPOS  ////////////////////////////////////////////////////////////////////////

// ищем слово "для" в предложении "Пример текста для поиска подстроки"
$position = strpos("Пример текста для поиска подстроки", "для");

// Проверка результата поиска
if ($position == true) {
    echo "Подстрока найдена на позиции: $position";
} else {
    echo "Подстрока не найдена";
}

# Подстрока найдена на позиции: 26


//  SUBSTR  ////////////////////////////////////////////////////////////////////////

// Определение исходной строки
$text = "This is text: Hello World";

// Извлечение слова длинной 13 символов, начиная с индекса 0
$str1 = substr($text, 0, 13);

// Извлечение слова длинной 11 символов, начиная с индекса 14
$str2 = substr($text, 14, 11);

// результат
echo "$str1";   # This is text:
echo "$str2";   # Hello World


//  STR_REPLACE  ///////////////////////////////////////////////////////////////////

$sentence = "Hello World";

$find = "World"; // подстрока, которую хотим заменить
$replace = "Friend"; // подстрока, на которую хотим заменить
$newSentence = str_replace($find, $replace, $sentence);

echo $newSentence; # Hello Friend
